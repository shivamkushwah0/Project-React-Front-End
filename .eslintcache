[{"D:\\Web Development\\Project\\project1\\src\\index.js":"1","D:\\Web Development\\Project\\project1\\src\\App.js":"2","D:\\Web Development\\Project\\project1\\src\\serviceWorker.js":"3","D:\\Web Development\\Project\\project1\\src\\components\\MainComponent.js":"4","D:\\Web Development\\Project\\project1\\src\\redux\\ConfigureStore.js":"5","D:\\Web Development\\Project\\project1\\src\\components\\HomeComponent.js":"6","D:\\Web Development\\Project\\project1\\src\\components\\HeaderComponent.js":"7","D:\\Web Development\\Project\\project1\\src\\redux\\ActionCreators.js":"8","D:\\Web Development\\Project\\project1\\src\\components\\AboutComponent.js":"9","D:\\Web Development\\Project\\project1\\src\\components\\MenuComponents.js":"10","D:\\Web Development\\Project\\project1\\src\\components\\ContactComponent.js":"11","D:\\Web Development\\Project\\project1\\src\\components\\DishDetailComponent.js":"12","D:\\Web Development\\Project\\project1\\src\\components\\FooterComponent.js":"13","D:\\Web Development\\Project\\project1\\src\\redux\\dishes.js":"14","D:\\Web Development\\Project\\project1\\src\\redux\\promotions.js":"15","D:\\Web Development\\Project\\project1\\src\\redux\\leaders.js":"16","D:\\Web Development\\Project\\project1\\src\\redux\\forms.js":"17","D:\\Web Development\\Project\\project1\\src\\redux\\comments.js":"18","D:\\Web Development\\Project\\project1\\src\\components\\LoadingComponent.js":"19","D:\\Web Development\\Project\\project1\\src\\shared\\baseURL.js":"20","D:\\Web Development\\Project\\project1\\src\\redux\\ActionTypes.js":"21"},{"size":680,"mtime":1598983836472,"results":"22","hashOfConfig":"23"},{"size":560,"mtime":1606895579252,"results":"24","hashOfConfig":"23"},{"size":5227,"mtime":1598552987728,"results":"25","hashOfConfig":"23"},{"size":4014,"mtime":1607454214034,"results":"26","hashOfConfig":"23"},{"size":864,"mtime":1607361758317,"results":"27","hashOfConfig":"23"},{"size":1941,"mtime":1607450953178,"results":"28","hashOfConfig":"23"},{"size":4686,"mtime":1607451853813,"results":"29","hashOfConfig":"23"},{"size":6784,"mtime":1607883685351,"results":"30","hashOfConfig":"23"},{"size":4886,"mtime":1607451960079,"results":"31","hashOfConfig":"23"},{"size":1874,"mtime":1607444331377,"results":"32","hashOfConfig":"23"},{"size":11298,"mtime":1607459327778,"results":"33","hashOfConfig":"23"},{"size":5072,"mtime":1607444563814,"results":"34","hashOfConfig":"23"},{"size":2633,"mtime":1602707690404,"results":"35","hashOfConfig":"23"},{"size":578,"mtime":1603805287991,"results":"36","hashOfConfig":"23"},{"size":616,"mtime":1607284445167,"results":"37","hashOfConfig":"23"},{"size":625,"mtime":1607450543980,"results":"38","hashOfConfig":"23"},{"size":172,"mtime":1607109974014,"results":"39","hashOfConfig":"23"},{"size":730,"mtime":1607407019518,"results":"40","hashOfConfig":"23"},{"size":219,"mtime":1603805287969,"results":"41","hashOfConfig":"23"},{"size":89,"mtime":1607877725760,"results":"42","hashOfConfig":"23"},{"size":541,"mtime":1607448810883,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"5nxea1",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Web Development\\Project\\project1\\src\\index.js",[],["90","91"],"D:\\Web Development\\Project\\project1\\src\\App.js",[],"D:\\Web Development\\Project\\project1\\src\\serviceWorker.js",[],"D:\\Web Development\\Project\\project1\\src\\components\\MainComponent.js",[],"D:\\Web Development\\Project\\project1\\src\\redux\\ConfigureStore.js",[],"D:\\Web Development\\Project\\project1\\src\\components\\HomeComponent.js",[],"D:\\Web Development\\Project\\project1\\src\\components\\HeaderComponent.js",[],"D:\\Web Development\\Project\\project1\\src\\redux\\ActionCreators.js",[],"D:\\Web Development\\Project\\project1\\src\\components\\AboutComponent.js",[],"D:\\Web Development\\Project\\project1\\src\\components\\MenuComponents.js",[],"D:\\Web Development\\Project\\project1\\src\\components\\ContactComponent.js",["92","93","94","95","96","97","98","99"],"import React, { Component } from 'react';\r\nimport {Breadcrumb , BreadcrumbItem  ,Row ,Col , Label , Button} from 'reactstrap';\r\nimport  {Link} from 'react-router-dom';\r\nimport {Control , Form , Errors} from 'react-redux-form';\r\n\r\nconst required =(val)=> val && val.length;\r\nconst maxlength =(len)=>(val)=>  val &&  (val.length<=len);\r\nconst minlength =(len)=>(val) => val && (val.length >=len);\r\nconst validemail = (val) => val && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst isNum = (val) => {\r\n    return /^\\d+$/.test(val);\r\n                        };\r\n                        \r\nclass Contact extends Component {\r\n\r\n    \r\n    \r\n    \r\n    \r\n     \r\n    render(){\r\n\r\n       const handleSubmit = (values) => {\r\n        \r\n        this.props.postfeedback(values.feedback ,values.firstname + \" \" +values.lastname , values.email , values.ContactType , values.TelNo , values.agree);\r\n            this.props.handlereset();\r\n            \r\n        }\r\n        \r\n    \r\n       \r\n    return(\r\n\r\n        \r\n\r\n        <div className=\"container\">\r\n             <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h2> You are Here </h2>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              \r\n              <Breadcrumb>\r\n              <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n              <BreadcrumbItem>Contact Us</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send US Your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    <Form model =\"user\" onSubmit={handleSubmit}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\"user.firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\" className=\"form-control\"\r\n                                        validators={{required , maxlength: maxlength(15),minlength: minlength(2)}}\r\n                                         />\r\n                                        \r\n                                </Col>\r\n                                <Errors model=\"user.firstname\" \r\n                                        show=\"touched\"\r\n                                        className=\"text-danger col-md-10 offset-md-2\"\r\n                                        messages={{\r\n                                            required :\" this is a required field\",\r\n                                            maxlength: \" max length should be 12\",\r\n                                            minlength: \" min length should be 2\" \r\n                                        }}\r\n                                        />\r\n                                \r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\"user.lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\" \r\n                                        className=\"form-control\"\r\n                                        validators={{required , maxlength: maxlength(15),minlength: minlength(2)}}\r\n                                         />\r\n                                         \r\n                                </Col>\r\n                                <Errors model=\"user.lastname\" \r\n                                        show=\"touched\"\r\n                                        className=\"text-danger col-md-10 offset-md-2\"\r\n                                        messages={{\r\n                                            required :\" this is a required field\",\r\n                                            maxlength: \" max length should be 12\",\r\n                                            minlength: \" min length should be 2\" \r\n                                        }}\r\n                                        />\r\n                                \r\n                                \r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"tel\" md={2}>Tel No.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\"user.TelNo\" id=\"tel\" name=\"tel\"\r\n                                        placeholder=\"Telephone Number\"\r\n                                        className =\" form-control\"  \r\n                                        validators={{required , maxlength: maxlength(15) ,minlength: minlength(2), isNum:isNum\r\n                                        }}\r\n                                        \r\n                                         />\r\n                                         \r\n                                </Col>\r\n                                <Errors model=\"user.TelNo\" \r\n                                        show = \"touched\"\r\n                                        className=\"text-danger col-md-10 offset-md-2\"\r\n                                        messages={{\r\n                                            required :\" this is a required field\",\r\n                                            maxlength: \" max length should be 12\",\r\n                                            minlength: \" min length should be 2\",\r\n                                            isNum:\" telephone number should contain only number\"\r\n\r\n                                        }}\r\n                                        />\r\n                                \r\n                                \r\n                                </Row>  \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\"user.email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\" \r\n                                        className=\"form-control\" \r\n                                        validators={{required ,\r\n                                        isEmail: validemail \r\n                                        }}\r\n                                       \r\n                                        />\r\n                                         \r\n                                </Col>\r\n                                <Errors model=\"user.email\" \r\n                                        show=\"touched\"\r\n                                        className=\"text-danger col-md-10 offset-md-2\"\r\n                                        messages={{\r\n                                            required :\" this is a required field\",\r\n                                            isEmail:\" invalid email\"\r\n\r\n                                        }}\r\n                                        />\r\n                                \r\n                               \r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Col md={{size: 6, offset: 2}}>\r\n                                   <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\"user.agree\"\r\n                                                name=\"agree\" className=\"form-check-input\"\r\n                                                \r\n                                                 /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                        </div> \r\n                                </Col>\r\n                                <Col md={{size: 3 , offset:1}}>\r\n                                   <Control.select model=\"user.ContactType\" name=\"contactType\" className=\"form-control\">\r\n                                    <option>\r\n                                        Tel\r\n                                    </option>\r\n                                    <option>\r\n                                        Email\r\n                                    </option>   \r\n                                    </Control.select> \r\n                                </Col>  \r\n                                </Row>    \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\"user.feedback\" id=\"message\" name=\"message\"\r\n                                        placeholder=\"Your Feedback\"  \r\n                                        rows=\"6\" className=\"form-control\"\r\n                                        required\r\n                                         />\r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10 , offset:2}}>\r\n                                    <Button type=\"submit\" disabled={false}>  Submit Feedback</Button>\r\n                                </Col>\r\n                                </Row>\r\n                            \r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Contact;","D:\\Web Development\\Project\\project1\\src\\components\\DishDetailComponent.js",["100","101","102"],"import React , {useState} from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Button, Modal , ModalBody ,ModalHeader,ModalFooter, Label \r\n  } from 'reactstrap'; \r\n  import {Link} from 'react-router-dom';\r\n  import {Breadcrumb ,BreadcrumbItem } from 'reactstrap';\r\n  import {LocalForm , Control , Errors} from 'react-redux-form';\r\n  import {Loading} from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseURL';\r\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\"\r\n\r\n   \r\n\r\n  function RenderComments(props)\r\n  {\r\n    \r\n    const [modal , setModal ] = useState(false);\r\n\r\n  const toggle= () => setModal(!modal);\r\n  const handleSubmit = (values) => \r\n  {\r\n    toggle();\r\n    console.log(values);\r\n    props.postcomment(props.dish.id , values.rating , values.name ,values.comment);\r\n  }\r\n\r\n  var com = props.cmt.map((cmt)=> {\r\n    return ( \r\n      \r\n        <Fade in>\r\n    <div key={cmt.id} className=\"m-4\">\r\n                        \r\n    <div>\r\n       {cmt.comment}\r\n    </div>\r\n    <div>\r\n        <cite>--{cmt.author} ,{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(cmt.date)))}</cite>\r\n    </div>\r\n    \r\n</div>\r\n</Fade>\r\n\r\n    )\r\n  });\r\n\r\n\r\n \r\n    return (\r\n      \r\n      <div>\r\n       \r\n      <Stagger in>\r\n      {com}\r\n      </Stagger>\r\n      \r\n      \r\n      <Button className=\"btn-primary-outline m-2\" onClick={toggle} >\r\n        <i className=\"fa fa-pencil\" />{\" \"}Submit Comment\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}> <strong> Submit Comment </strong></ModalHeader>\r\n        <ModalBody>\r\n          \r\n          <LocalForm model=\"value\" onSubmit={ (v) => handleSubmit(v)} addcomment= {props.addcomment} dish={props.dish}>\r\n          \r\n            <Label className=\"form-check\" htmlFor=\"rating\">Rating</Label>\r\n            <Control.select  model=\".rating\" name=\"rating\" id =\"rating\" className=\"form-control\">\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </Control.select>\r\n            <Label className=\"form-check\" htmlFor=\"name\">Name</Label>\r\n            <Control.text className=\"form-control\" placeholder=\"Your Name...\" name=\"name\" model=\".name\" id=\"name\" \r\n            validators={{max : (val)=> !(val&&val.length>15) , min : (val)=> !(val&&val.length<2) }}\r\n            validateOn=\"blur\"\r\n            />\r\n            <Errors\r\n            model =\".name\"\r\n            show=\"touched\"\r\n            className=\"text-danger\"\r\n            messages = {{\r\n                max: \"Name should be less than 16 characters\",\r\n                min: \"Name should be more than two characters \"\r\n            }}\r\n            />\r\n\r\n            <Label className=\"form-check\" htmlFor=\"comment\">Comment</Label>\r\n            <Control.textarea className=\"form-control\" model=\".comment\" for=\"comment\" id =\"comment\" rows=\"5\" />\r\n\r\n\r\n            <Button className=\"btn-info mt-3\" type=\"submit\" >Submit</Button>\r\n            \r\n          </LocalForm>\r\n          \r\n    \r\n        </ModalBody>\r\n        <ModalFooter>\r\n          \r\n          <Button className=\"btn-primary\" onClick={toggle}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  function RenderDish(props )\r\n  {\r\n    \r\n    return(\r\n      <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n        <Card>\r\n          <CardImg top src={baseUrl +  props.dish.image} alt={props.dish.name}/>\r\n          <CardBody>\r\n          <CardTitle>{props.dish.name}</CardTitle>\r\n          <CardText>{props.dish.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n        </FadeTransform>\r\n        );\r\n      }\r\n      function DishDetail (props) {\r\n        if(props.isLoading)\r\n    return <Loading />\r\n\r\n    else if (props.errMess)\r\n    {\r\n        return (\r\n            <div>\r\n                <h4>{props.errMess}</h4>\r\n            </div>\r\n        )\r\n    }\r\n    else \r\n      return(\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h2> You are Here </h2>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              \r\n              <Breadcrumb>\r\n              <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n              <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n              <BreadcrumbItem>{props.dish.name}</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-sm-6\">\r\n      <RenderDish dish={props.dish} />\r\n      </div>\r\n      <div className=\"col-12 col-sm-6\">\r\n      <RenderComments cmt={props.comments} dish={props.dish} postcomment={props.postcomment}/>\r\n      </div>\r\n       </div>\r\n      </div>\r\n        );\r\n      }\r\n  \r\n\r\n  export default DishDetail;","D:\\Web Development\\Project\\project1\\src\\components\\FooterComponent.js",[],"D:\\Web Development\\Project\\project1\\src\\redux\\dishes.js",[],"D:\\Web Development\\Project\\project1\\src\\redux\\promotions.js",[],"D:\\Web Development\\Project\\project1\\src\\redux\\leaders.js",[],"D:\\Web Development\\Project\\project1\\src\\redux\\forms.js",[],"D:\\Web Development\\Project\\project1\\src\\redux\\comments.js",[],"D:\\Web Development\\Project\\project1\\src\\components\\LoadingComponent.js",[],"D:\\Web Development\\Project\\project1\\src\\shared\\baseURL.js",[],["103","104"],"D:\\Web Development\\Project\\project1\\src\\redux\\ActionTypes.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":70,"column":25,"nodeType":"111","endLine":70,"endColumn":67},{"ruleId":"112","severity":1,"message":"113","line":84,"column":37,"nodeType":"111","endLine":87,"endColumn":44},{"ruleId":"112","severity":1,"message":"113","line":104,"column":37,"nodeType":"111","endLine":108,"endColumn":44},{"ruleId":"112","severity":1,"message":"113","line":126,"column":37,"nodeType":"111","endLine":132,"endColumn":44},{"ruleId":"112","severity":1,"message":"113","line":152,"column":37,"nodeType":"111","endLine":159,"endColumn":43},{"ruleId":"112","severity":1,"message":"114","line":178,"column":45,"nodeType":"111","endLine":181,"endColumn":52},{"ruleId":"112","severity":1,"message":"115","line":187,"column":36,"nodeType":"111","endLine":187,"endColumn":121},{"ruleId":"112","severity":1,"message":"116","line":200,"column":37,"nodeType":"111","endLine":204,"endColumn":44},{"ruleId":"112","severity":1,"message":"115","line":68,"column":13,"nodeType":"111","endLine":68,"endColumn":98},{"ruleId":"112","severity":1,"message":"113","line":76,"column":13,"nodeType":"111","endLine":79,"endColumn":15},{"ruleId":"112","severity":1,"message":"116","line":91,"column":13,"nodeType":"111","endLine":91,"endColumn":112},{"ruleId":"105","replacedBy":"117"},{"ruleId":"107","replacedBy":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["119"],["120"],"no-global-assign","no-unsafe-negation"]